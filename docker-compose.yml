services:
  database:
    image: postgres:latest
    container_name: database_container
    volumes:
      - ./database/create_matcha.sql:/docker-entrypoint-initdb.d/create_matcha.sql:ro
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    networks:
      - matcha
  script:
    image: python:3.10  # Utilisez une image Python
    container_name: generate_fake_data
    volumes:
      - ./database:/app  # Montez le dossier contenant votre script
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && python generate_data.py"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - database
    networks:
      - matcha

  backend:
    build: ./backend
    env_file:
      - .env
    volumes:
      - ./backend:/opt/backend/
      # - backend/uploads:/opt/backend/uploads
    depends_on:
      - database
    ports:
      - "3000:3000"
    networks:
      - matcha

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/opt/frontend/
    environment:
      - VITE_API_URL=${API_URL}
    depends_on:
      - backend
    ports:
      - "5173:5173"
    networks:
      - matcha

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    env_file:
      - .env
    networks:
      - matcha

volumes:
  frontend:
    driver: local
    driver_opts:
      device: ./frontend
      type: none
      o: bind
  backend:
    driver: local
    driver_opts:
      device: ./backend
      type: none
      o: bind
  database:
    driver: local
    driver_opts:
      device: ./database
      type: none
      o: bind
networks:
  matcha:
